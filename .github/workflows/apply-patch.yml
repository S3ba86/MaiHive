name: Apply Patch from Comment

on:
  issue_comment:
    types: [created, edited]
  pull_request_review_comment:
    types: [created, edited]

permissions:
  contents: write
  pull-requests: write
  issues: read

jobs:
  apply:
    # Only run when comment contains /apply
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '/apply')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '/apply'))
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Robust extraction that works from mobile comments, no jq/awk required
      - name: Extract patch from comment
        id: extract
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const body = (context.payload.comment && context.payload.comment.body) ? context.payload.comment.body : '';
            if (!body || !body.includes('/apply')) {
              core.setFailed('No /apply trigger in comment');
              return;
            }
            const m = body.match(/```(?:patch|diff)\s*\n([\s\S]*?)\n```/i);
            if (!m) {
              core.setFailed('No ```patch or ```diff fenced block found after /apply');
              return;
            }
            const out = path.join(process.env.RUNNER_TEMP, 'patch.diff');
            fs.writeFileSync(out, m[1], 'utf8');
            core.info(`Wrote patch to ${out}`);
            core.setOutput('patch', out);

      - name: Create working branch
        run: |
          set -e
          BASE="${{ github.event.repository.default_branch }}"
          BR="chatops/apply-${{ github.run_id }}"
          git switch -c "$BR" "origin/$BASE" || git switch -c "$BR"

      - name: Apply patch
        run: |
          set -e
          # Try with and without a/ b/ prefixes
          git apply --index -p1 "${{ steps.extract.outputs.patch }}" || git apply --index -p0 "${{ steps.extract.outputs.patch }}"
          echo "Patch applied and staged."

      - name: Create PR
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "Apply patch from comment by @${{ github.actor }}"
          title: "Apply patch from comment by @${{ github.actor }}"
          body: "Applied via workflow from comment: ${{ github.event.comment.html_url }}"
          branch: "chatops/apply-${{ github.run_id }}"
          base: "${{ github.event.repository.default_branch }}"
